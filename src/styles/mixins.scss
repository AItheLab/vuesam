// Mixins for Vue SAM component library
@use './variables' as *;

// Responsive breakpoint mixin
@mixin sam-breakpoint($breakpoint) {
  @media (min-width: map-get($sam-breakpoints, $breakpoint)) {
    @content;
  }
}

// Focus ring mixin
@mixin sam-focus-ring($color: 'primary', $offset: 2px) {
  &:focus {
    outline: none;
  }
  
  &:focus-visible {
    outline: 2px solid sam-color($color);
    outline-offset: $offset;
  }
}

// Transition mixin
@mixin sam-transition($properties, $duration: 'base', $easing: ease) {
  $transition-list: ();
  
  @each $property in $properties {
    $transition-list: append($transition-list, #{$property} map-get($sam-transitions, $duration) $easing, comma);
  }
  
  transition: $transition-list;
}

// Elevation mixin
@mixin sam-elevation($level: 'base') {
  box-shadow: sam-shadow($level);
}

// Truncate text
@mixin sam-truncate($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// Button base styles
@mixin sam-button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: inherit;
  font-weight: map-get($sam-font-weights, 'medium');
  text-decoration: none;
  cursor: pointer;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  border: 1px solid transparent;
  @include sam-transition((background-color, border-color, color, transform, box-shadow));
  
  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
  
  &:active:not(:disabled) {
    transform: scale(0.98);
  }
}

// Input base styles
@mixin sam-input-base {
  display: block;
  width: 100%;
  font-family: inherit;
  font-size: sam-font-size('base');
  line-height: map-get($sam-line-heights, 'normal');
  background-color: sam-color('surface');
  border: 1px solid sam-color('border');
  color: sam-color('text-primary');
  @include sam-transition((border-color, box-shadow, background-color));
  
  &::placeholder {
    color: sam-color('text-hint');
  }
  
  &:hover:not(:disabled):not(:focus) {
    border-color: sam-color('border-light');
  }
  
  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
    background-color: sam-color('background-tertiary');
  }
}

// Visually hidden but accessible
@mixin sam-visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// Component base
@mixin sam-component {
  position: relative;
  box-sizing: border-box;
  
  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }
}
